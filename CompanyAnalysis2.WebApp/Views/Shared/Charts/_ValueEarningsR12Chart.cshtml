@using CompanyAnalysis2.Model
@model Company
@{
    string divId = Guid.NewGuid().ToString();   
 }
<div id="@divId" data-chart-name="_ValueEarningsR12Chart" data-company-id="@Model.Id"></div>
<script type="text/javascript">
    @{
        int numberOfSteps = 11;
 
        double temp = Math.Max(Model.RecordNetIncomeR12 * 10, Model.RecordCompanyValue);
        double temp2 = temp / numberOfSteps;
        string s = Convert.ToInt32(Math.Truncate(temp2)).ToString();
        string firstDigit = (Convert.ToInt32(s[0].ToString()) + 1).ToString();
        for (int i = 1; i < s.Length; i++)
        {
            firstDigit = firstDigit + "0";
        }

        int stepSize = Convert.ToInt32(firstDigit);
        int maxCompanyValue = stepSize * numberOfSteps;
        int maxNetIncomeR12 = maxCompanyValue / 10;

    }
    // Create and populate the data table.
    var data = new google.visualization.DataTable();
    data.addColumn('string', 'Perioder');
    data.addColumn('number', 'Värdering');
    data.addColumn('number', 'Resultat R12');
    @foreach (Period period in ViewBag.Periods)
    {
        if (Model.Reports.Where(r => r.Period.Id == period.Id).Count() > 0)
        {
            Report report = Model.Reports.Where(r => r.Period.Id == period.Id).First();
            var netIncomeR12 = "null";
            if (report.NetIncomeR12 > 0)
            {
                netIncomeR12 = report.NetIncomeR12.Value.ToString("#0.00").Replace(",", ".");
            }
            var companyValue = "null";
            if (report.CompanyValue > 0)
            {
                companyValue = report.CompanyValue.Value.ToString("#0.00").Replace(",", ".");
            }

            string periodName = "";
            if(report.CEO != null)
            {
                periodName = report.Period.Name + " (" + report.CEO + ")";
            }
            else
            {
                periodName = report.Period.Name;
            }
            
            <text>data.addRow(['</text>@periodName<text>', </text>@companyValue<text>, </text>@netIncomeR12<text>]);</text>
        }
        else
        {
            var companyValue = "null";
            if (Model.GetCompanyValue(period.EndDate.Value) != 0)
            {
                companyValue = Model.GetCompanyValue(period.EndDate.Value).ToString("#0.00").Replace(",", ".");
            }
            <text>data.addRow(['</text>@period.Name<text>', </text>@companyValue<text>, null]);</text>
        }
    }

    @{
        string tmp = "null";
        if(Model.CompanyValue.HasValue)
        {
            tmp = Model.CompanyValue.Value.ToString("#0.00").Replace(",", ".");
        }
     }
    data.addRow(['Idag', @tmp, null])

    // Create and draw the visualization.
    var chart = new google.visualization.LineChart(document.getElementById('@divId'));
    chart.draw(data, {
        chartArea:{left:70, top:50, width:"80%", height:"70%"},
        curveType: "none",
        height: 550,
        hAxis: { slantedText: true },
        vAxes: {
            0: { logScale: false, minValue: 0, maxValue: @maxCompanyValue, gridlines: {count: @numberOfSteps } },
                1: { logScale: false, minValue: 0, maxValue: @maxNetIncomeR12, gridlines: {count: @numberOfSteps } }
            },
        series: {
            0: { targetAxisIndex: 0, color: 'red' },
            1: { targetAxisIndex: 1, color: 'green' }                
        },
        legend: {position: 'top'}
    });

</script>